{"version":3,"sources":["SearchWeather/SearchWeather.module.css","assets/images/Night.svg","assets/images/CloudyDay.svg","assets/images/CloudyNight.svg","assets/images/Rain.svg","Layout/Layout.js","SearchWeather/SearchWeather.js","App.js","index.js","Layout/Layout.module.css","assets/images/Day.svg"],"names":["module","exports","layout","props","renderBackground","isDay","background","backgroundAttachment","backgroundRepeat","backgroundSize","className","styles","Container","style","Header","children","SearchWeather","image","submitData","modal","precip","Image","src","rain","is_day","cloudcover","clearDay","cloudyDay","clearNight","cloudyNight","error","Text","Modal","location","local_time","Temperature","temperature","forecast","feelslike","Content","Form","onSubmit","request","SearchTerm","placeholder","onChange","inputHandler","SearchButton","Description","App","useState","input","onInput","onSubmitData","setIsDay","useEffect","dayOrNight","onSubmitHandler","event","a","preventDefault","axios","get","response","data","Layout","target","value","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96726b1a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"SearchWeather_Form__2QeO8\",\"SearchTerm\":\"SearchWeather_SearchTerm__K9f23\",\"SearchButton\":\"SearchWeather_SearchButton__-pNRc\",\"Modal\":\"SearchWeather_Modal__2ut1-\",\"Image\":\"SearchWeather_Image__JPkAA\",\"Temperature\":\"SearchWeather_Temperature__3xJYN\",\"Text\":\"SearchWeather_Text__1UQ2d\",\"Description\":\"SearchWeather_Description__3WkIQ\"};","module.exports = __webpack_public_path__ + \"static/media/Night.35618b67.svg\";","module.exports = __webpack_public_path__ + \"static/media/CloudyDay.fad7ed3e.svg\";","module.exports = __webpack_public_path__ + \"static/media/CloudyNight.77373a79.svg\";","module.exports = __webpack_public_path__ + \"static/media/Rain.91e867d3.svg\";","import React from 'react'\n\nimport styles from './Layout.module.css'\n\nconst layout = (props) => {\n    let day = 'https://images.unsplash.com/photo-1531147646552-1eec68116469?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80' \n    let night = 'https://images.unsplash.com/photo-1507400492013-162706c8c05e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=609&q=80'\n\n    const renderBackground = props.isDay \n    ? {background:`url(${day})`,\n        backgroundAttachment:'fixed',\n        backgroundRepeat:'no-repeat',\n        backgroundSize:'100% 100%'} \n    : {background: `url(${night})`} \n\nreturn (\n\n    <div className={styles.Container} style={renderBackground}>\n        <header className={styles.Header}>\n            <h1>Weather Now</h1>\n        </header>\n        {props.children}\n    </div>\n    \n)   \n}   \n\nexport default layout","import React from 'react'\n\nimport styles from './SearchWeather.module.css'\n\nimport clearDay from '../assets/images/Day.svg'\nimport clearNight from '../assets/images/Night.svg'\nimport cloudyDay from '../assets/images/CloudyDay.svg'\nimport cloudyNight from '../assets/images/CloudyNight.svg'\nimport rain from '../assets/images/Rain.svg'\n\nconst SearchWeather = (props) => {\n    const {submitData, isDay} = props\n    let modal = ''\n    let image;\n\n// Determine which image to use based on weather \n    if (submitData.precip >=0.1) {\n        image = <img className={styles.Image} src={rain} />\n    } else if  (submitData.is_day === 'yes' && submitData.cloudcover < 20) {\n        image = <img className={styles.Image} src={clearDay} />\n    } else if (submitData.is_day === 'yes'&& submitData.cloudcover >= 20) {\n        image = <img className={styles.Image} src={cloudyDay} />\n    } else if (submitData.is_day === 'no' && submitData.cloudcover < 20) {\n       image = <img className={styles.Image} src={clearNight} />\n    } else if (submitData.is_day === 'no'&& submitData.cloudcover >= 20) {\n        image = <img className={styles.Image} src={cloudyNight} />\n    } else {\n        image = <img className={styles.Image} src={clearDay} />\n    }\n\n// If there is error, we will show error message, otherwise we will render modal \n    if (submitData.error) {\n        modal = (\n            <div>\n                <p className={styles.Text}>{submitData.error}</p>\n            </div>\n        )\n    } else if (submitData) {\n        modal = (\n            <div className={styles.Modal}>\n                 <p className={styles.Text}>{submitData.location}</p>\n                <p className={styles.Text}>The Local Time is {submitData.local_time}</p>\n                <div className={styles.Temperature}>\n                    <p>{submitData.temperature}° F</p>\n                    {image}\n                </div>\n                <p className={styles.Text}>{submitData.forecast}</p>\n                <p className={styles.Text}>Feels Like: {submitData.feelslike}° F</p>\n                <p className={styles.Text}>Precipitation: There is a {submitData.precip * 100}% chance of rain</p>\n                \n            </div>\n        ) \n    } \n    \n    return (\n        <div className={styles.Content}>\n            <form className={styles.Form} onSubmit={props.request}>\n                <input className={styles.SearchTerm} placeholder=\"Location\"  onChange={props.inputHandler}/>\n                <button className={styles.SearchButton}><i className=\"fa fa-search\"></i></button>\n            </form>\n            <p className={styles.Description}>Search a new location to get real time weather data from around the world.</p>\n            {modal}\n            \n        </div>\n    )\n}\n\nexport default SearchWeather","import React, {useState,useEffect} from 'react';\nimport axios from 'axios'\nimport './App.css';\n\nimport Layout from './Layout/Layout'\nimport SearchWeather from './SearchWeather/SearchWeather'\n\nconst App = () => {\n  const [input, onInput] = useState('')\n  const [submitData, onSubmitData] = useState('') \n  const [isDay, setIsDay] = useState(true) \n\n  useEffect(() => {\n    if (submitData.is_day === 'no') {\n      setIsDay(false)\n    } else {\n      setIsDay(true)\n    }\n  }, [submitData, isDay])\n\n  const onInputHandler = (event) => {\n    onInput(event.target.value)\n  }\n\n  const onSubmitHandler = async (event) => {\n      event.preventDefault()\n      const response  = await axios.get(`/weather?address=${input}`)\n      const data = response.data\n      onSubmitData(data)\n  }\n\n    let dayOrNight \n    isDay \n    ? dayOrNight = 'https://images.unsplash.com/photo-1531147646552-1eec68116469?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80' \n    : dayOrNight = 'https://images.unsplash.com/photo-1507400492013-162706c8c05e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=609&q=80'\n\n  return (\n        <Layout isDay={isDay} background={dayOrNight}>\n            <SearchWeather submitData={submitData}input= {input} inputHandler={onInputHandler} request={onSubmitHandler}/>\n        </Layout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Layout_Container__2DmEN\",\"Header\":\"Layout_Header__3f3YP\"};","module.exports = __webpack_public_path__ + \"static/media/Day.44d80505.svg\";"],"sourceRoot":""}